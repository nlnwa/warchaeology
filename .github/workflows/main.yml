name: Main

on:
  push:

permissions:
  contents: write

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Checkout
        uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.56.1

  test:
    name: go test
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Test
        run: go test ./...

  benchmark:
    name: Benchmark
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.21"
      - name: Run benchmark
        run: go test ./... -bench="Bench" | tee benchmark-result.txt
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-benchmark-results
          path: benchmark-result.txt
      - name: Download previous benchmark results
        uses: actions/checkout@v4
        with:
          ref: benchmark-results
          path: previous/
      - name: Compare benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: Go Benchmark
          tool: 'go'
          output-file-path: benchmark-result.txt
          external-data-json-path: ./previous/benchmarks/${{ matrix.os }}/results.json
          auto-push: false
          fail-on-alert: true
          alert-threshold: "150%"

  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Detect snapshot
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "flags=--snapshot" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: v1.24.0
          args: release --clean ${{ env.flags }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # This should have been a matrix, but building separate targets is a paid feature in `goreleaser`
      - uses: actions/upload-artifact@v4
        with:
          name: darwin-x86_64
          path: dist/warchaeology_Darwin_x86_64*.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64
          path: dist/warchaeology_Linux_x86_64.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: linux-i386
          path: dist/warchaeology_Linux_i386.tar.gz
      - uses: actions/upload-artifact@v4
        with:
          name: windows-x86_64
          path: dist/warchaeology_Windows_x86_64.zip
      - uses: actions/upload-artifact@v4
        with:
          name: windows-i386
          path: dist/warchaeology_Windows_i386.zip
      - uses: actions/upload-artifact@v4
        with:
          name: deb-amd64
          path: dist/warchaeology_*amd64.deb
      - uses: actions/upload-artifact@v4
        with:
          name: deb-i386
          path: dist/warchaeology_*i386.deb
      - uses: actions/upload-artifact@v4
        with:
          name: rpm-x86_64
          path: dist/warchaeology-*x86_64.rpm
      - uses: actions/upload-artifact@v4
        with:
          name: rpm-i386
          path: dist/warchaeology-*i386.rpm
